'use strict';var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});const execReg_1=__importDefault(require('..\\..\\src\\util\\execReg'));let str;let callback;let reg;let arr;describe('execReg',()=>{describe('success',()=>{describe('example',()=>{beforeAll(()=>{arr=[];callback=jest.fn(arrM=>{arr.push(`${arrM[1]}-${arrM[2]}`);});str='abc abc abc def abc';reg=/(a)b(c)/g;execReg_1.default({str,reg,callback});});it('should have run callback - per match',()=>{expect(callback).toBeCalledTimes(4);});it('should have supplied matching parenthesis - per match',()=>{expect(arr).toEqual(['a-c','a-c','a-c','a-c']);});});});describe('fail',()=>{describe('example',()=>{it('should not run - callback if no match',()=>{callback=jest.fn();execReg_1.default({str:'abc',reg:/xyz/g,callback});expect(callback).toBeCalledTimes(0);});});});});