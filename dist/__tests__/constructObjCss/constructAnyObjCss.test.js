'use strict';var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});const constructAnyObjCss_1=__importDefault(require('../../constructObjCss/constructAnyObjCss'));describe('constructAnyObjCss()',()=>{describe('success',()=>{it('should match - 1 selector with child',()=>{const strCss='position: absolute';const objCss={};const strSelectors='.header .child';const actual=constructAnyObjCss_1.default({objCss,strSelectors,strCss});const expected={[strSelectors]:[strCss]};expect(actual).toEqual(expected);});it('should match - 1 selector with pseudo',()=>{const strCss='position: absolute';const objCss={};const strSelectors='.header:hover';const actual=constructAnyObjCss_1.default({objCss,strSelectors,strCss});const expected={[strSelectors]:[strCss]};expect(actual).toEqual(expected);});it('should match - 1 selector with combinator',()=>{const strCss='position: absolute';const objCss={};const strSelectors='.header > child';const actual=constructAnyObjCss_1.default({objCss,strSelectors,strCss});const expected={[strSelectors]:[strCss]};expect(actual).toEqual(expected);});it('should push onto existing objCss - selector',()=>{const strCss='position: absolute';const strSelectors='.header:hover';const objCss={[strSelectors]:['color: red;']};const actual=constructAnyObjCss_1.default({objCss,strSelectors,strCss});const expected={[strSelectors]:['color: red;',strCss]};expect(actual).toEqual(expected);});it('should only push onto existing objCss with matching selector',()=>{const strCss='position: absolute';const strSelectors='.item>.x';const objCss={header:['color: red;'],[strSelectors]:['color: blue;']};const actual=constructAnyObjCss_1.default({objCss,strSelectors,strCss});const expected={header:['color: red;'],[strSelectors]:['color: blue;',strCss]};expect(actual).toEqual(expected);});});});