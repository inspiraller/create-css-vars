'use strict';var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});exports.cli=void 0;const fs_1=__importDefault(require('fs'));const path_1=__importDefault(require('path'));const getArgs_1=__importDefault(require('./lib/getArgs'));const populateObjCssFromDir_1=__importDefault(require('./lib/populateObjCssFromDir'));const createVarsFromPopCss_1=__importDefault(require('./lib/createVarsFromPopCss'));const convertObjStrToStr=vars=>Object.keys(vars).reduce((accum,cur)=>`${accum}  '${cur}': \`${vars[cur]}\`,\n`,'');const convertVarsToStr=(vars,combined)=>{return`
    interface Vars {
      [key: string]: string;
    }
    export const vars: Vars = {\n${convertObjStrToStr(vars)}\n};
  `;};const cli=args=>{const objArgs=getArgs_1.default(args);const from=objArgs.from;const to=objArgs.to;let pathIn='';if(from){pathIn=fs_1.default.existsSync(from)?from:path_1.default.resolve(__dirname,from);}if(!fs_1.default.existsSync(pathIn)){pathIn=path_1.default.resolve(__dirname);}let pathOut='';if(to){pathOut=fs_1.default.existsSync(to)?to:path_1.default.resolve(__dirname,to);}if(!fs_1.default.existsSync(pathOut)){pathOut=path_1.default.resolve(__dirname);}const objCssAll=populateObjCssFromDir_1.default(pathIn);const vars=createVarsFromPopCss_1.default(objCssAll);const strVars=convertVarsToStr(vars,objCssAll.combined);const outFile='css-vars';fs_1.default.writeFile(path_1.default.resolve(pathOut,outFile),strVars,err=>{if(err){throw err;}console.log(`File: "${pathOut}${outFile}" created successfully.`);});return'hello';};exports.cli=cli;