'use strict';var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});exports.cli=void 0;const fs_extra_1=__importDefault(require('fs-extra'));const path_1=__importDefault(require('path'));const getArgs_1=__importDefault(require('./util/getArgs'));const constructObjCssFromDir_1=__importDefault(require('./constructObjCss/constructObjCssFromDir'));const createSelectorsFromObjCss_1=__importDefault(require('./popCss/createSelectorsFromObjCss'));const convertSelectorsToStr_1=__importDefault(require('./convertSelectors/convertSelectorsToStr'));const createGlobalStyles_1=__importDefault(require('./constructObjCss/createGlobalStyles'));const pathExists=to=>{const cwd=process.cwd();const strPath=to&&(to.indexOf('./')===0||to.indexOf('/')===0)?path_1.default.join(cwd,to):to;return{strPath,isExist:fs_extra_1.default.existsSync(strPath)?true:false};};const getRelPath=(to,label,isCreateDir)=>{const cwd=process.cwd();const objExist=pathExists(to);const {strPath,isExist}=objExist;let strPathTemp=strPath;if(!isExist){if(isCreateDir&&strPathTemp){fs_extra_1.default.ensureDirSync(strPathTemp);}else{console.warn(`! Warning: path "${label}" not found.!!!!!!!!!!!!!!!!!!`);strPathTemp=path_1.default.resolve(cwd);}}return strPathTemp;};const cli=args=>{const objArgs=getArgs_1.default(args);const from=objArgs.from;const to=objArgs.to;const js=objArgs.js;const assets_from=objArgs.assets_from;const assets_to=objArgs.assets_to;const global_styles=objArgs.global_styles;const pathFromDir=getRelPath(from,'from');const pathToDir=getRelPath(to,'to',true);const objCssAll=constructObjCssFromDir_1.default(pathFromDir);const ext=js?'js':'ts';const selectors=createSelectorsFromObjCss_1.default(objCssAll);const strSelectors=convertSelectorsToStr_1.default(selectors,!!js);if(!strSelectors){console.log('! Warning: There is no css!!');return;}const outFile=`css-vars.${ext}`;fs_extra_1.default.writeFile(path_1.default.resolve(pathToDir,outFile),strSelectors,err=>{if(err){throw err;}console.log(`File: "${pathToDir}/${outFile}" created successfully.`);});if(assets_from){console.log('get assets_from',assets_from);const pathAssetsFrom=getRelPath(assets_from,'assets_from');const pathAssetsTo=assets_to?getRelPath(assets_to,'assets_to',true):pathToDir;if(pathAssetsTo!==pathAssetsFrom){fs_extra_1.default.copySync(pathAssetsFrom,pathAssetsTo,{overwrite:true});}}if(objCssAll.theme){const outThemeFile=`theme.${ext}`;const strThemeVars=Object.keys(objCssAll.theme).map(key=>`  '${key}': '${objCssAll.theme[key]}'`).join(',\n');const strTheme=`
const theme = {\n${strThemeVars}\n};
export default theme;
    `;fs_extra_1.default.writeFile(path_1.default.resolve(pathToDir,outThemeFile),strTheme,err=>{if(err){throw err;}console.log(`File: "${pathToDir}/${outThemeFile}" created successfully.`);});}if(global_styles){const {isExist,strPath}=pathExists(global_styles);if(isExist){const strGlobalStyles=createGlobalStyles_1.default(strPath,!!js);const outGlobalStylesPath=`globalStyles.${ext}`;fs_extra_1.default.writeFile(path_1.default.resolve(pathToDir,outGlobalStylesPath),strGlobalStyles,err=>{if(err){throw err;}console.log(`File: "${pathToDir}/${outGlobalStylesPath}" created successfully.`);});}}};exports.cli=cli;